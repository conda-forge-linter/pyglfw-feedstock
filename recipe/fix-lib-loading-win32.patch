From 3c97bda1fb2aea78b5c6f928a0adf2f5fecfd212 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Richard=20Ho=CC=88chenberger?=
 <richard.hoechenberger@gmail.com>
Date: Wed, 8 Jan 2020 18:02:21 +0100
Subject: [PATCH] ENH: Rework library loading on Win to add better conda
 support

---
 glfw/library.py | 35 ++++++++++++++++++++++++-----------
 1 file changed, 24 insertions(+), 11 deletions(-)

diff --git a/glfw/library.py b/glfw/library.py
index 7b9f12b..9ff8be1 100644
--- a/glfw/library.py
+++ b/glfw/library.py
@@ -152,21 +152,34 @@ if os.environ.get('PYGLFW_LIBRARY', ''):
     except OSError:
         glfw = None
 elif sys.platform == 'win32':
-    # try glfw3.dll using windows search paths
+    glfw = None  # Will become `not None` on success.
+
+    # try package directory
     try:
-        glfw = ctypes.CDLL('glfw3.dll')
+        if sys.maxsize > 2**32:
+            # load Microsoft Visual C++ 2012 runtime on 64-bit systems
+            msvcr = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'msvcr110.dll'))
+        else:
+            # load Microsoft Visual C++ 2010 runtime on 32-bit systems
+            msvcr = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'msvcr100.dll'))
+        glfw = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'glfw3.dll'))
     except OSError:
-        # try glfw3.dll in package directory
+        pass
+
+    # try conda's default location on Windows
+    if glfw is None:
+        try:  
+            glfw = ctypes.CDLL(os.path.join(sys.prefix, 'bin', 'glfw3.dll'))
+        except OSError:
+            pass
+    
+    # try Windows default search path
+    if glfw is None:
         try:
-            if sys.maxsize > 2**32:
-                # load Microsoft Visual C++ 2012 runtime on 64-bit systems
-                msvcr = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'msvcr110.dll'))
-            else:
-                # load Microsoft Visual C++ 2010 runtime on 32-bit systems
-                msvcr = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'msvcr100.dll'))
-            glfw = ctypes.CDLL(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'glfw3.dll'))
+            glfw = ctypes.CDLL('glfw3.dll')
         except OSError:
-            glfw = None
+            pass
+    
 else:
     glfw = _load_library(['glfw', 'glfw3'], ['.so', '.dylib'],
                           _get_library_search_paths(), _glfw_get_version)
-- 
2.21.0 (Apple Git-122)

